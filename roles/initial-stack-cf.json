{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Initial Zetta Stack Deployment, init SG, ELB",

  "Parameters": {
    "KeyPair": {
      "Description": "Keypair to use in ASG groups created later.",
      "Type": "String"
    },
    "LogentriesToken": {
      "Description": "LogEntries Token.",
      "Type": "String",
      "Default": ""
    },
    "ZettaStack" : {
      "Description" : "Zetta Stack",
      "Type" : "String"
    },
    "CoreServicesAMI" : {
      "Description" : "CoreOS AMI",
      "Type" : "String"
    },
    "CoreServicesInstanceType" : {
      "Description" : "",
      "Type" : "String"
    },
    "CoreServicesSize" : {
      "Description" : "",
      "Type" : "Number"
    },
    "UseExistingDeviceDataBucket" : {
      "Type" : "String",
      "Default" : "false",
      "AllowedValues" : ["false", "true"],
      "Description" : "Enter false or true."
    },
    "ExistingDeviceDataBucket" : {
      "Type" : "String",
      "Default" : "",
      "Description" : "Existing s3 bucket for device data."
    },
    "UseExistingZettaUsageBucket" : {
      "Type" : "String",
      "Default" : "false",
      "AllowedValues" : ["false", "true"],
      "Description" : "Enter false or true."
    },
    "ExistingZettaUsageBucket" : {
      "Type" : "String",
      "Default" : "",
      "Description" : "Existing s3 bucket for zetta usage data."
    }
  },

  "Conditions" : {
    "CreateDeviceDataBucket" : {"Fn::Equals" : [{"Ref" : "UseExistingDeviceDataBucket"}, "false"]},
    "CreateZettaUsageBucket" : {"Fn::Equals" : [{"Ref" : "UseExistingZettaUsageBucket"}, "false"]}
  },

  "Resources": {
    "ELBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Zetta ELB SecurityGroup",
        "SecurityGroupIngress": [
          {"IpProtocol": "tcp", "FromPort": "80", "ToPort": "80", "CidrIp": "0.0.0.0/0"}
        ]
      }
    },

    "CoreServicesSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Core Services SecurityGroup, applies to core services machines in CoreOS cluster",
        "SecurityGroupIngress": [
          {"IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": "0.0.0.0/0"}
        ]
      }
    },
    "CoreServicesIngress2380": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupName": {"Ref": "CoreServicesSecurityGroup"}, "IpProtocol": "tcp", "FromPort": "2380", "ToPort": "2380", "SourceSecurityGroupId": {
          "Fn::GetAtt" : [ "CoreOsSecurityGroup", "GroupId" ]
        }
      }
    },

    "CoreServicesIngress4001": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupName": {"Ref": "CoreServicesSecurityGroup"}, "IpProtocol": "tcp", "FromPort": "4001", "ToPort": "4001", "SourceSecurityGroupId": {
          "Fn::GetAtt" : [ "CoreOsSecurityGroup", "GroupId" ]
        }
      }
    },

    "CoreServicesIngress2379": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupName": {"Ref": "CoreServicesSecurityGroup"}, "IpProtocol": "tcp", "FromPort": "2379", "ToPort": "2379", "SourceSecurityGroupId": {
          "Fn::GetAtt" : [ "CoreOsSecurityGroup", "GroupId" ]
        }
      }
    },

    "CoreOsSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Core SecurityGroup, applies to any machine in CoreOS cluster",
        "SecurityGroupIngress": [
          {"IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": "0.0.0.0/0"}
        ]
      }
    },

    "TargetSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Core SecurityGroup, applies to any machine in CoreOS cluster",
        "SecurityGroupIngress": [
          {"IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": "0.0.0.0/0"}
        ]
      }
    },
    "TargetIngressFromRouter": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupName": {"Ref": "TargetSecurityGroup"}, "IpProtocol": "tcp", "FromPort": "3000", "ToPort": "3020", "SourceSecurityGroupId": {
          "Fn::GetAtt" : [ "RouterSecurityGroup", "GroupId" ]
        }
      }
    },

    "RouterSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Core SecurityGroup, applies to any machine in CoreOS cluster",
        "SecurityGroupIngress": [
          {"IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": "0.0.0.0/0"}
        ]
      }
    },
    "RouterIngress80": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupName": {"Ref": "RouterSecurityGroup"}, "IpProtocol": "tcp", "FromPort": "80", "ToPort": "80", "SourceSecurityGroupId": {
          "Fn::GetAtt" : [ "ELBSecurityGroup", "GroupId" ]
        }
      }
    },

    "DataWorkerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Zetta Sqs data worker",
        "SecurityGroupIngress": [
          {"IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": "0.0.0.0/0"}
        ]
      }
    },


    "CoreServicesASG": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": {"Fn::GetAZs": ""},
        "LaunchConfigurationName": {"Ref": "CoreServicesLaunchConfig"},
        "MinSize": "3",
        "MaxSize": "5",
        "HealthCheckType": "EC2",
        "Cooldown": 60,
        "DesiredCapacity": {"Ref": "CoreServicesSize"},
        "HealthCheckGracePeriod": 60,
        "Tags": [
            {"Key": "zetta:stack", "Value": {"Ref" : "ZettaStack" }, "PropagateAtLaunch": true},
            {"Key": "Name", "Value": { "Fn::Join" : [ "-", [ {"Ref" : "ZettaStack" }, "core-services" ] ] }, "PropagateAtLaunch": true}
        ]
      }
    },
    "CoreServicesLaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId" : {"Ref": "CoreServicesAMI"},
        "InstanceType": {"Ref": "CoreServicesInstanceType"},
        "KeyName": {"Ref": "KeyPair"},
        "SecurityGroups": [{ "Fn::GetAtt" : ["CoreOsSecurityGroup", "GroupId"] }, { "Fn::GetAtt" : ["CoreServicesSecurityGroup", "GroupId"] }],
        "IamInstanceProfile": {"Ref" : "CoreServicesRoleInstanceProfile" },
        "UserData" : null
      }
    },

    "ZettaELB" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "AvailabilityZones" : { "Fn::GetAZs" : "" },
        "CrossZone": true,
        "Listeners" : [
          { "LoadBalancerPort" : "80", "InstancePort" : "80", "Protocol" : "TCP" }
        ],
        "HealthCheck" : {
          "Target": "HTTP:80/",
          "HealthyThreshold": "2",
          "UnhealthyThreshold": "5",
          "Interval": "30",
          "Timeout": "5"
        },
        "ConnectionDrainingPolicy": {
          "Enabled" : "true",
          "Timeout" : "60"
        },
        "SecurityGroups": [ { "Fn::GetAtt" : [ "ELBSecurityGroup", "GroupId" ] } ]
      }
    },

    "DeviceDataQueue": {
       "Type": "AWS::SQS::Queue",
       "Properties": {
          "MessageRetentionPeriod": 1209600,
          "VisibilityTimeout": 1800
       }
    },
    "DeviceDataBucket": {
       "Condition" : "CreateDeviceDataBucket",
       "Type" : "AWS::S3::Bucket",
       "Properties" : {}
    },

    "ZettaUsageQueue": {
       "Type": "AWS::SQS::Queue",
       "Properties": {
          "MessageRetentionPeriod": 1209600,
          "VisibilityTimeout": 1800
       }
    },
    "ZettaUsageBucket": {
       "Condition" : "CreateZettaUsageBucket",
       "Type" : "AWS::S3::Bucket",
       "Properties" : { }
    },

    "TargetRole": {
       "Type": "AWS::IAM::Role",
       "Properties": {
          "AssumeRolePolicyDocument": {
             "Version" : "2012-10-17",
             "Statement": [ {
                "Effect": "Allow",
                "Principal": {
                   "Service": [ "ec2.amazonaws.com" ]
                },
                "Action": [ "sts:AssumeRole" ]
             } ]
          },
          "Path": "/",
          "Policies": [
            {
              "PolicyName": "WriteQueue",
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                          {
                            "Effect": "Allow",
                            "Action": ["sqs:SendMessage", "sqs:GetQueueUrl"],
                            "Resource": [ { "Fn::GetAtt" : ["DeviceDataQueue", "Arn"]}, { "Fn::GetAtt" : ["ZettaUsageQueue", "Arn"]} ]
                          }
                      ]
                  }
            },
            {
              "PolicyName": "CloudWatchMetrics",
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                      "Action": [
                        "cloudwatch:GetMetricStatistics",
                        "cloudwatch:ListMetrics",
                        "cloudwatch:PutMetricData",
                        "ec2:DescribeTags"
                      ],
                      "Effect": "Allow",
                      "Resource": "*"
                    }
                  ]
                }
            }

          ]
        }
    },
    "TargetRoleInstanceProfile": {
       "Type": "AWS::IAM::InstanceProfile",
       "Properties": {
          "Path": "/",
          "Roles": [ {
             "Ref": "TargetRole"
          } ]
       }
    },


    "RouterRole": {
       "Type": "AWS::IAM::Role",
       "Properties": {
          "AssumeRolePolicyDocument": {
             "Version" : "2012-10-17",
             "Statement": [ {
                "Effect": "Allow",
                "Principal": {
                   "Service": [ "ec2.amazonaws.com" ]
                },
                "Action": [ "sts:AssumeRole" ]
             } ]
          },
          "Path": "/",
          "Policies": [
            {
              "PolicyName": "CloudWatchMetrics",
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                      "Action": [
                        "cloudwatch:GetMetricStatistics",
                        "cloudwatch:ListMetrics",
                        "cloudwatch:PutMetricData",
                        "ec2:DescribeTags"
                      ],
                      "Effect": "Allow",
                      "Resource": "*"
                    }
                  ]
                }
            }

          ]
        }
    },
    "RouterRoleInstanceProfile": {
       "Type": "AWS::IAM::InstanceProfile",
       "Properties": {
          "Path": "/",
          "Roles": [ {
             "Ref": "RouterRole"
          } ]
       }
    },


    "CoreServicesRole": {
       "Type": "AWS::IAM::Role",
       "Properties": {
          "AssumeRolePolicyDocument": {
             "Version" : "2012-10-17",
             "Statement": [ {
                "Effect": "Allow",
                "Principal": {
                   "Service": [ "ec2.amazonaws.com" ]
                },
                "Action": [ "sts:AssumeRole" ]
             } ]
          },
          "Path": "/",
          "Policies": [
            {
              "PolicyName": "CloudWatchMetrics",
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                      "Action": [
                        "cloudwatch:GetMetricStatistics",
                        "cloudwatch:ListMetrics",
                        "cloudwatch:PutMetricData",
                        "ec2:DescribeTags"
                      ],
                      "Effect": "Allow",
                      "Resource": "*"
                    }
                  ]
                }
            },
            {
            "PolicyName": "CLIROAccess",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "ec2:Describe*"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "autoscaling:Describe*"
                  ],
                  "Resource": "*"
                }
              ]
            }
           }
          ]
        }
    },
    "CoreServicesRoleInstanceProfile": {
       "Type": "AWS::IAM::InstanceProfile",
       "Properties": {
          "Path": "/",
          "Roles": [ {
             "Ref": "CoreServicesRole"
          } ]
       }
    },

    "DataWorkerRole": {
       "Type": "AWS::IAM::Role",
       "Properties": {
          "AssumeRolePolicyDocument": {
             "Version" : "2012-10-17",
             "Statement": [ {
                "Effect": "Allow",
                "Principal": {
                   "Service": [ "ec2.amazonaws.com" ]
                },
                "Action": [ "sts:AssumeRole" ]
             } ]
          },
          "Path": "/",
          "Policies": [
            {
              "PolicyName": "ReadQueue",
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                          {
                            "Effect": "Allow",
                            "Action": [ "sqs:ReceiveMessage", "sqs:DeleteMessage", "sqs:GetQueueUrl", "sqs:GetQueueAttributes" ],
                            "Resource": [ { "Fn::GetAtt" : ["DeviceDataQueue", "Arn"]}, { "Fn::GetAtt" : ["ZettaUsageQueue", "Arn"]} ]
                          }
                      ]
                  }
            },
            {
              "PolicyName": "PutS3",
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                          {
                            "Effect": "Allow",
                            "Action": [
                              "s3:DeleteObject",
                              "s3:DeleteObjectVersion",
                              "s3:GetObject",
                              "s3:GetObjectAcl",
                              "s3:GetObjectTorrent",
                              "s3:GetObjectVersion",
                              "s3:GetObjectVersionAcl",
                              "s3:GetObjectVersionTorrent",
                              "s3:PutObject",
                              "s3:PutObjectAcl",
                              "s3:PutObjectVersionAcl",
                              "s3:RestoreObject"
                            ],
                            "Resource": [ { "Fn::Join" : ["", ["arn:aws:s3:::", { "Fn::If" : [ "CreateDeviceDataBucket", {"Ref" : "DeviceDataBucket"}, {"Ref" : "ExistingDeviceDataBucket"} ]} , "/*" ]]},
                                          { "Fn::Join" : ["", ["arn:aws:s3:::", { "Fn::If" : [ "CreateZettaUsageBucket", {"Ref" : "ZettaUsageBucket"}, {"Ref" : "ExistingZettaUsageBucket"} ]} , "/*" ]]}
                                        ]
                          }
                      ]
                  }
            }
          ]
        }
    },
    "DataWorkerRoleInstanceProfile": {
       "Type": "AWS::IAM::InstanceProfile",
       "Properties": {
          "Path": "/",
          "Roles": [ {
             "Ref": "DataWorkerRole"
          } ]
       }
    }
  },

  "Outputs" : {
    "DeviceDataBucket" : {
      "Value" : { "Fn::If" : [ "CreateDeviceDataBucket", {"Ref" : "DeviceDataBucket"}, {"Ref" : "ExistingDeviceDataBucket"} ]}
    },
    "ZettaUsageBucket" : {
      "Value" : { "Fn::If" : [ "CreateZettaUsageBucket", {"Ref" : "ZettaUsageBucket"}, {"Ref" : "ExistingZettaUsageBucket"} ]}
    }
  }
}
