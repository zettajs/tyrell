{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Credential API Instance",
  "Parameters": {
    "DBName" : {
      "Description" : "DB Name",
      "Type" : "String"
    },
    "DBAllocatedStorage": {
      "Default": 5,
      "Description": "The size of the database (Gb)",
      "Type": "Number",
      "MinValue": 5,
      "MaxValue": 1024,
      "ConstraintDescription": "must be between 5 and 1024Gb."
    },
    "DBClass" : {
      "Description" : "DB Instance Type",
      "Type" : "String"
    },
    "DBUsername": {
      "NoEcho": "true",
      "Description": "The database admin account username",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
    },
    "DBPassword": {
      "NoEcho": "true",
      "Description": "The database admin account password",
      "Type": "String",
      "MinLength": "8",
      "MaxLength": "41",
      "AllowedPattern": "[a-zA-Z0-9]*",
      "ConstraintDescription": "must contain only alphanumeric characters."
    },
    "CredentialAPISecurityGroup" : {
      "Description" : "Security group for credential api",
      "Type" : "String"
    },
    "MultiAZ": {
      "Default": "false",
      "Description": "Create a multi-AZ RDS database instance",
      "Type": "String",
      "AllowedValues": [
        "true",
        "false"
      ],
      "ConstraintDescription": "must be either true or false."
    },
    "ZettaStack" : {
      "Description" : "zetta stack",
      "Type" : "String"
    },
    "StackVpc": {
      "Type": "String",
      "Description": "The VPC to associate security groups to."
    },
    "PrivateSubnets": {
      "Description": "Private subnets that the ASG should distribute boxes on.",
      "Type": "CommaDelimitedList"
    }
  },

  "Resources": {

    "DBSubnetGroup": {
       "Type" : "AWS::RDS::DBSubnetGroup",
       "Properties" : {
          "DBSubnetGroupDescription" : "DB Subnet group",
          "SubnetIds" : { "Ref": "PrivateSubnets" }
       }
    },

    "DBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "DB SecurityGroup",
        "SecurityGroupIngress": [],
        "VpcId": {"Ref": "StackVpc"}
      }
    },

    "DBSecurityGroupIngress5432": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "FromPort": "5432",
        "ToPort": "5432",
        "SourceSecurityGroupId": { "Ref" : "CredentialAPISecurityGroup" },
        "GroupId": {
          "Fn::GetAtt" : ["DBSecurityGroup", "GroupId"]
        }
      }
    },

    "DBSecurityGroupIngress5432FromLamda": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "FromPort": "5432",
        "ToPort": "5432",
        "SourceSecurityGroupId": { "Ref" : "LambdaProvisionSecurityGroup" },
        "GroupId": {
          "Fn::GetAtt" : ["DBSecurityGroup", "GroupId"]
        }
      }
    },

    "DBInstance" : {
       "Type": "AWS::RDS::DBInstance",
       "Properties": {
          "Engine"            : "Postgres",
          "EngineVersion"     : "9.4",
          "DBName"            : { "Ref" : "DBName" },
          "DBInstanceClass"   : { "Ref" : "DBClass" },
          "AllocatedStorage"  : { "Ref" : "DBAllocatedStorage" },
          "MasterUsername"    : { "Ref" : "DBUsername" },
          "MasterUserPassword": { "Ref" : "DBPassword" },
          "VPCSecurityGroups" : [ { "Fn::GetAtt": [ "DBSecurityGroup", "GroupId" ] } ],
          "PubliclyAccessible" : false,
          "MultiAZ"           : { "Ref": "MultiAZ" },
          "DBSubnetGroupName" : { "Ref": "DBSubnetGroup" },
          "StorageType": "gp2",
          "Tags": [
              {"Key": "zetta:stack", "Value": {"Ref" : "ZettaStack" } },
              {"Key": "Name", "Value": {"Ref" : "AWS::StackName" } }
          ]
       }
    },

    "LambdaProvisionSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Lambda Function to Provision DB SecurityGroup",
        "SecurityGroupIngress": [],
        "VpcId": {"Ref": "StackVpc"}
      }
    },

    "LambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{ "Effect": "Allow", "Principal": {"Service": ["lambda.amazonaws.com"]}, "Action": ["sts:AssumeRole"] }]
        },
        "Path": "/",
        "Policies": [{
          "PolicyName": "AWSLambdaVPC",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
               {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "ec2:CreateNetworkInterface",
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:DeleteNetworkInterface"
                  ],
                  "Resource": "*"
                }
            ]
          }
        }]
      }
    }

  },
  "Outputs": {
    "ConnectionString": {
      "Description": "Connection string for the master database",
      "Value": { "Fn::Join": ["", [ "postgres://", { "Fn::GetAtt": [ "DBInstance", "Endpoint.Address" ] }, ":", { "Fn::GetAtt": [ "DBInstance", "Endpoint.Port" ] }, "/", { "Ref": "DBName" } ] ] }
    }
  }
}
